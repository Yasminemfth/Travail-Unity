using UnityEngine;

/// G√®re un levier du puzzle. Lorsqu'on interagit avec, il peut changer son √©tat
///  Maj la couleur et la rotation du levier.

public class PuzzleButton : MonoBehaviour
{
    [Tooltip("√âtat initial du levier. true = allum√© (droite, vert), false = √©teint (gauche, rouge)")]
    public bool isOn = false;

    [Tooltip("Autres leviers √† toggle lorsqu'on active celui-ci")]
    public PuzzleButton[] othersToToggle;

    private SpriteRenderer sr;

    void Start()
    {
        sr = GetComponent<SpriteRenderer>();
        UpdateVisual();
    }

    void OnTriggerEnter2D(Collider2D other)
    {
        if (!other.CompareTag("Player")) return;

        // Si la porte est d√©j√† ouverte, on ne peut plus toucher aux leviers
        if (PuzzleManager.instance.doorAlreadyOpened) return;

        ToggleSelf();

        // Active/d√©sactive les autres leviers li√©s
        foreach (var levier in othersToToggle)
        {
            levier.ToggleSelf();
        }

        // V√©rifie si le puzzle est r√©solu
        PuzzleManager.instance.CheckPuzzleState();
    }

    
    /// toggle = change l'etat du levier
   
    public void ToggleSelf()
    {
        isOn = !isOn;
        UpdateVisual();
    }

/// force le changement d'etat

    public void ForceToggle()
    {
        isOn = !isOn;
        UpdateVisual();
    }

    
    /// D√©finit l‚Äô√©tat du levier

    public void SetState(bool state)
    {
        isOn = state;
        UpdateVisual();
    }

    /// Maj la rotation et la couleur du levier en fonction de son √©tat

    void UpdateVisual()
    {
        if (sr == null) sr = GetComponent<SpriteRenderer>();

        transform.localRotation = Quaternion.Euler(0f, 0f, isOn ? -45f : 45f);

        // üü¢ = bon / üî¥ = pas bon
        sr.color = isOn ? Color.green : Color.red;
    }
}
